@import 'base';

#editor.ql-container {
	border: none;
}

#editor.ql-container > div.ql-editor {
	color: var(--font-color);
	font-family: 'Latin Modern Roman';
	text-shadow: 0 0 1px var(--toolbar-shadow-color);
	font-size: 19px;
	line-height: 1.3;
	border: none;
	
	& h1, h2, h3 {
		color: var(--header-color);
        margin-top: 1.3em;
        margin-bottom: .5em;
	}
	
	& h1 {
        font-size: 1.9em;
    }
	& h2 {
        font-size: 1.35em;
    }
	& h3 {
        font-size: 1.1em;
    }
	& h1 + h2, h2 + h3 {
		margin-top: 0em;
		// counter margin-bottom - don't want extra space between a h2 and h3
	}

	& p, & ul, & ol, & pre, & blockquote {
		margin-top: .8rem;
		margin-bottom: .8rem;
	}

	& p + ul, & p + ol {
		margin-top: -.3rem;
	}

	// & li {
	// 	margin-left: -1.4ch;
	// 	&::before {
	// 		margin-right: 1.2ch;
	// 	}
	// }

	& li + li {
		margin-top: .3rem;
	}

	& .ql-toolbar.ql-snow svg > * {
		stroke: var(--pure-black) !important;
	}

	& p:has(img) {
		text-align: center;
		margin-top: 1.5rem;
	}
  
	& p img.editor-img {
		position: relative;
		// margin-top: .5rem !important;
		// margin-bottom: .4rem !important;
		// left: 50%; transform: translateX(-50%); /* center image */

		// padding: clamp(.5rem, 10%, 2rem); /* min, pref, max */
		// not using this cus I can't find a way to get 10% of image width

		padding: 1rem;

		border: 1px solid var(--image-border-color);
		// background-color: var(--pure-white);

		box-shadow: .5rem .5rem 0 var(--image-shadow-color);
	}
}

body.numberedhs-enabled, body.numberedhs-noh1 {
	& #editor.ql-container > div.ql-editor {
		& > h1::before, & > h2::before, & > h3::before {
			opacity: .3;
			margin-right: 1.4ch; 	// completely aligned titles look bad;
									// this is a good middle ground
		}

		// init counters
		counter-reset: h1-count; // start h1 at 1 on editor load
		& > h1 { counter-increment: h1-count; counter-reset: h2-count; } // start h2 at x.1 on new h1
		& > h2 { counter-increment: h2-count; counter-reset: h3-count; } // start h3 at x.x.1 on new h2
		& > h3 { counter-increment: h3-count; }

		// counter styles
		& > h1::before {
			content: counter(h1-count);
		}
		& > h2::before {
			content: counter(h1-count) "." counter(h2-count);
		}
		& > h3::before {
			content: counter(h1-count) "." counter(h2-count) "." counter(h3-count);
		}
	}
}

body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h1::before {
    display: none !important;
}